name: Track Resolved Issues

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write
  issues: read

jobs:
  track-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Fetch All Closed Issues (GraphQL)
        run: |
          TOKEN=${{ secrets.PAT_TOKEN }}
          OWNER="3ee-Games"
          REPO="hoa-simulator"
          END_CURSOR=null
          TOTAL_BUGS=0
          TOTAL_DOCS=0
          TOTAL_ENHANCEMENTS=0
          
          fetch_issues() {
            LABEL=$1
            END_CURSOR=$2

            jq -n \
              --argjson endCursor "$END_CURSOR" \
              --arg label "$LABEL" \
              '{
                query: "query($endCursor: String, $label: String!) {
                  repository(owner: \"3ee-Games\", name: \"hoa-simulator\") {
                    issues(first: 100, labels: [$label], states: CLOSED, after: $endCursor) {
                      totalCount
                      pageInfo {
                        endCursor
                        hasNextPage
                      }
                    }
                  }
                }",
                variables: {
                  endCursor: $endCursor,
                  label: $label
                }
              }'
          }

          calculate_total() {
            local label=$1
            local total=0
            while :; do
              QUERY=$(fetch_issues "$label" "$END_CURSOR")
              
              echo "DEBUG: Constructed Query for $label: $QUERY"
              
              RESPONSE=$(curl -s -X POST -H "Authorization: Bearer $TOKEN" \
                -H "Content-Type: application/json" \
                -d "$QUERY" https://api.github.com/graphql)
              
              echo "DEBUG: Raw Response for $label: $RESPONSE"

              BUG_COUNT=$(echo $RESPONSE | jq '.data.repository.issues.totalCount')
              if [ "$BUG_COUNT" != "null" ]; then
                total=$((total + BUG_COUNT))
              fi

              HAS_NEXT_PAGE=$(echo $RESPONSE | jq '.data.repository.issues.pageInfo.hasNextPage')
              END_CURSOR=$(echo $RESPONSE | jq -r '.data.repository.issues.pageInfo.endCursor')

              if [ "$HAS_NEXT_PAGE" != "true" ]; then
                break
              fi
            done
            echo $total
          }

          TOTAL_BUGS=$(calculate_total "bug")
          TOTAL_DOCS=$(calculate_total "documentation")
          TOTAL_ENHANCEMENTS=$(calculate_total "enhancement")

          mkdir -p public
          echo "{\"resolved_bugs\": $TOTAL_BUGS, \"resolved_documentation\": $TOTAL_DOCS, \"resolved_enhancements\": $TOTAL_ENHANCEMENTS}" > public/issue-count.json

      - name: Check Git Status
        run: |
          git status
          git diff

      - name: Commit and Push Issue Count
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add public/issue-count.json
          git commit -m "Update issue count" || echo "No changes to commit"
          git push
