name: Track Resolved Bugs

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write
  issues: read

jobs:
  track-bugs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Fetch All Closed Bug Issues (GraphQL)
        run: |
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          OWNER="3ee-Games"
          REPO="hoa-simulator"
          LABEL="bug"
          END_CURSOR="null"
          TOTAL_BUGS=0
          
          # Create temporary GraphQL query file
          cat <<EOF > query.json
          {
            "query": "query(\$endCursor: String) {
              repository(owner: \"3ee-Games\", name: \"hoa-simulator\") {
                issues(first: 100, labels: [\"bug\"], states: CLOSED, after: \$endCursor) {
                  totalCount
                  edges {
                    node {
                      id
                      title
                      state
                      labels(first: 10) {
                        nodes {
                          name
                        }
                      }
                    }
                  }
                  pageInfo {
                    endCursor
                    hasNextPage
                  }
                }
              }
            }",
            "variables": {
              "endCursor": $END_CURSOR
            }
          }
          EOF

          while :; do
            RESPONSE=$(curl -s -X POST -H "Authorization: Bearer $TOKEN" \
              -H "Content-Type: application/json" \
              -d @query.json https://api.github.com/graphql)

            BUG_COUNT=$(echo $RESPONSE | jq '.data.repository.issues.edges | length')
            TOTAL_BUGS=$((TOTAL_BUGS + BUG_COUNT))

            HAS_NEXT_PAGE=$(echo $RESPONSE | jq '.data.repository.issues.pageInfo.hasNextPage')
            END_CURSOR=$(echo $RESPONSE | jq -r '.data.repository.issues.pageInfo.endCursor')

            ESCAPED_CURSOR=$(printf '%s' "$END_CURSOR" | jq -R .)

            jq --arg endCursor "$ESCAPED_CURSOR" '.variables.endCursor = $endCursor' query.json > temp.json && mv temp.json query.json

            if [ "$HAS_NEXT_PAGE" != "true" ]; then
              break
            fi
          done

          mkdir -p public
          echo "{\"resolved_bugs\": $TOTAL_BUGS}" > public/bug-count.json

      - name: Check Git Status
        run: |
          git status
          git diff

      - name: Commit and Push Bug Count
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add public/bug-count.json
          git commit -m "Update bug count" || echo "No changes to commit"
          git push
